name: Release Zotero/Juris-M .deb packages

on:
  schedule:
    - cron: 0 */2 * * *
  push:
  workflow_dispatch:
    inputs:
      rebuildOption:
        description: rebuild options
        required: false
        default: '--force'

jobs:
  refresh:
    runs-on: ubuntu-latest
    steps:
    - name: Cancel Previous Runs
      uses: styfle/cancel-workflow-action@0.6.0
      with:
        access_token: ${{ github.token }}
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Install b2sdk beta
      run: |
        git clone git@github.com:Backblaze/b2-sdk-python.git
        cd b2-sdk-python
        git checkout sync_customizability
        pip install .

    - name: Import GPG key
      uses: retorquere/ghaction-import-gpg@master
      with:
        gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }}

    - name: install build requirements
      run: |
        sudo add-apt-repository ppa:mozillateam/ppa -y
        sudo apt-get -q update
        sudo apt-get -qy install dpkg-sig fakeroot

    - name: Cache sync tools and binaries
      uses: actions/cache@v2
      env:
        cache-name: v3
      with:
        path: |
          ./bin
          ./repo
        key: repo-${{ env.cache-name }}-${{ github.ref }}-${{ hashFiles('rebuild.py', 'build.py', 'requirements.txt') }}

    - name: Install SSH Key
      uses: shimataro/ssh-key-action@v2
      with:
        key: ${{ secrets.SF_SSH_KEY }}
        known_hosts: 'sourceforge'

    - name: refresh b2
      id: b2
      env:
        PYTHONUNBUFFERED: true
        B2_APPLICATION_KEY: ${{ secrets.B2_APPLICATION_KEY }}
        B2_APPLICATION_KEY_ID: ${{ secrets.B2_APPLICATION_KEY_ID }}
        GITHUB_TOKEN: ${{ github.token }}
      run: |
        ./rebuild.py ${{ github.event.inputs.rebuildOptions }}

        # update old mirror
        cat config.yml | sed 's/apt-package-archive/zotero-apt/' | sed 's/zotero.retorque.re/apt.retorque.re/' | sponge config.yml
        mv repo/apt-package-archive repo/zotero-apt
        ./rebuild.py --sync

    - name: refresh sourceforge
      id: sf
      env:
        PYTHONUNBUFFERED: true
        B2_APPLICATION_KEY: ${{ secrets.B2_APPLICATION_KEY }}
        B2_APPLICATION_KEY_ID: ${{ secrets.B2_APPLICATION_KEY_ID }}
        GITHUB_TOKEN: ${{ github.token }}
        OLD: ${{ steps.b2.outputs.bucket }}
        NEW: zotero-better-bibtex
      run: |
        mv repo/$OLD repo/$NEW
        (cd repo && apt-ftparchive packages $NEW > $NEW/Packages)

        (cd repo/$NEW && bzip2 -kf Packages)
        (cd repo/$NEW && apt-ftparchive -o APT::FTPArchive::AlwaysStat="true" -o APT::FTPArchive::Release::Codename=apt-package-archive/ -o APT::FTPArchive::Release::Acquire-By-Hash="yes" release . > Release)
        #(cd repo/$NEW && gpg --export dpkg > zotero-archive-keyring.gpg)
        #(cd repo/$NEW && gpg --armor --export dpkg > zotero-archive-keyring.asc)
        (cd repo/$NEW && gpg --yes -abs -u dpkg -o Release.gpg --digest-algo sha256 Release)
        (cd repo/$NEW && gpg --yes -abs -u dpkg --clearsign -o InRelease --digest-algo sha256 Release)

        (cd repo/$NEW && cp Packages by-hash/MD5Sum/`md5sum Packages`
        (cd repo/$NEW && cp Packages.bz2 by-hash/MD5Sum/`md5sum Packages.bz2`
        (cd repo/$NEW && cp Packages by-hash/SHA1/`sha1sum Packages`
        (cd repo/$NEW && cp Packages.bz2 by-hash/SHA1/`sha1sum Packages.bz2`
        (cd repo/$NEW && cp Packages by-hash/SHA256/`sha256sum Packages`
        (cd repo/$NEW && cp Packages.bz2 by-hash/SHA256/`sha256sum Packages.bz2`
        (cd repo/$NEW && cp Packages by-hash/SHA512/`sha512sum Packages`
        (cd repo/$NEW && cp Packages.bz2 by-hash/SHA512/`sha512sum Packages.bz2`

        rsync --progress -e "ssh -o StrictHostKeyChecking=no" -avhz --delete repo/$NEW/ retorquere@frs.sourceforge.net:/home/frs/project/zotero-deb/
        echo "::set-output name=repo::$NEW"

    - uses: actions/setup-go@v2
      with:
        go-version: '^1.13.1' # The Go version to download (if necessary) and use.
    - name: refresh github
      env:
        PYTHONUNBUFFERED: true
        B2_APPLICATION_KEY: ${{ secrets.B2_APPLICATION_KEY }}
        B2_APPLICATION_KEY_ID: ${{ secrets.B2_APPLICATION_KEY_ID }}
        GITHUB_TOKEN: ${{ github.token }}
        OLD: ${{ steps.sf.outputs.repo }}
        # NEW: apt-get
        NEW: beta
        GITHUB_ACCESS_TOKEN: ${{ github.token }}
      run: |
        go get github.com/pauldotknopf/github-release-sync
        mv repo/$OLD repo/$NEW
        (cd repo && apt-ftparchive packages $NEW > $NEW/Packages)

        (cd repo/$NEW && bzip2 -kf Packages)
        (cd repo/$NEW && apt-ftparchive -o APT::FTPArchive::AlwaysStat="true" -o APT::FTPArchive::Release::Codename=apt-package-archive/ -o APT::FTPArchive::Release::Acquire-By-Hash="yes" release . > Release)
        #(cd repo/$NEW && gpg --export dpkg > zotero-archive-keyring.gpg)
        #(cd repo/$NEW && gpg --armor --export dpkg > zotero-archive-keyring.asc)
        (cd repo/$NEW && gpg --yes -abs -u dpkg -o Release.gpg --digest-algo sha256 Release)
        (cd repo/$NEW && gpg --yes -abs -u dpkg --clearsign -o InRelease --digest-algo sha256 Release)

        (cd repo/$NEW && cp Packages by-hash/MD5Sum/`md5sum Packages`
        (cd repo/$NEW && cp Packages.bz2 by-hash/MD5Sum/`md5sum Packages.bz2`
        (cd repo/$NEW && cp Packages by-hash/SHA1/`sha1sum Packages`
        (cd repo/$NEW && cp Packages.bz2 by-hash/SHA1/`sha1sum Packages.bz2`
        (cd repo/$NEW && cp Packages by-hash/SHA256/`sha256sum Packages`
        (cd repo/$NEW && cp Packages.bz2 by-hash/SHA256/`sha256sum Packages.bz2`
        (cd repo/$NEW && cp Packages by-hash/SHA512/`sha512sum Packages`
        (cd repo/$NEW && cp Packages.bz2 by-hash/SHA512/`sha512sum Packages.bz2`

        github-release-sync --owner retorquere --repo zotero-deb --tag $NEW --overwrite --prune

  test:
    runs-on: ubuntu-latest
    needs: refresh
    strategy:
      fail-fast: false
      matrix:
        hosting: [sourceforge, github, b2]
    steps:
    - name: install apt fixes
      if: matrix.hosting == 'github'
      run: |
        set -e
        set -x
        # https://github.com/retorquere/zotero-deb/issues/49
        sudo add-apt-repository ppa:tj/bugfixes
        sudo apt-get -q update
        sudo apt-get -qy install apt

    - name: test install ${{ matrix.hosting }}
      env:
        PYTHONUNBUFFERED: true
      run: |
        set -e
        set -x

        case "${{ matrix.hosting }}" in
          sourceforge)
            export INSTALLSH=https://downloads.sourceforge.net/project/zotero-deb/install.sh
            ;;
          b2)
            export INSTALLSH=https://apt.retorque.re/file/zotero-apt/install.sh
            ;;
          github)
            export INSTALLSH=https://github.com/retorquere/zotero-deb/releases/download/apt-get/install.sh
            ;;
        esac

        curl -sL $INSTALLSH | sudo bash
        gpg --list-packets /usr/share/keyrings/zotero-archive-keyring.gpg
        sudo apt-get -q update
        sudo apt-get -qy install zotero jurism zotero-beta
        file /usr/lib/zotero/zotero /usr/lib/zotero/zotero-bin /usr/local/bin/zotero /usr/lib/zotero-beta/zotero /usr/lib/zotero-beta/zotero-bin /usr/local/bin/zotero-beta /usr/lib/jurism/jurism /usr/lib/jurism/jurism-bin /usr/local/bin/jurism
